HIF003
--
-- Copyright (C) 1988-2002 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	lpm_constant.tdf
	{
		lpm_constant [LPM_CVALUE,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			7 [LPM_CVALUE=0,LPM_WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0];
		}
	}
	zero.tdf
	{
		zero [USE_LPM_FOR_AHDL_OPERATORS] [lpm_constant.inc]
		{
			6 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0];
		}
	}
	mux4x1.gdf
	{
		mux4x1 [] []
		{
			3 [] [];
		}
	}
	logiclayer.gdf
	{
		logiclayer [] []
		{
			2 [] [];
		}
	}
	fulladder.gdf
	{
		fulladder [] []
		{
			5 [] [];
		}
	}
	arithmeticlayer.gdf
	{
		arithmeticlayer [] []
		{
			4 [] [];
		}
	}
	alulayer.gdf
	{
		alulayer [] []
		{
			1 [] [];
		}
	}
	alu.gdf
	{
		alu [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	alu::(0,0):(0): alu.gdf
	{
		alulayer::(0,0):(1): alulayer.gdf
		{
			logiclayer::(0,0):(2): logiclayer.gdf
			{
				mux4x1::(0,0):(2): mux4x1.gdf;
			}
			mux4x1::(0,0):(3): mux4x1.gdf;
			arithmeticlayer::(0,0):(8): arithmeticlayer.gdf
			{
				fulladder::(0,0):(12): fulladder.gdf;
				mux4x1::(0,0):(6): mux4x1.gdf;
				zero::(0,0):(3): zero.tdf
				{
					lpm_constant::(48,2):(28,lpm_constant_component): lpm_constant.tdf;
				}
			}
		}
		alulayer::(0,0):(15): alulayer.gdf
		{
			logiclayer::(0,0):(2): logiclayer.gdf
			{
				mux4x1::(0,0):(2): mux4x1.gdf;
			}
			mux4x1::(0,0):(3): mux4x1.gdf;
			arithmeticlayer::(0,0):(8): arithmeticlayer.gdf
			{
				fulladder::(0,0):(12): fulladder.gdf;
				mux4x1::(0,0):(6): mux4x1.gdf;
				zero::(0,0):(3): zero.tdf;
			}
		}
		alulayer::(0,0):(20): alulayer.gdf
		{
			logiclayer::(0,0):(2): logiclayer.gdf
			{
				mux4x1::(0,0):(2): mux4x1.gdf;
			}
			mux4x1::(0,0):(3): mux4x1.gdf;
			arithmeticlayer::(0,0):(8): arithmeticlayer.gdf
			{
				fulladder::(0,0):(12): fulladder.gdf;
				mux4x1::(0,0):(6): mux4x1.gdf;
				zero::(0,0):(3): zero.tdf;
			}
		}
		alulayer::(0,0):(23): alulayer.gdf
		{
			logiclayer::(0,0):(2): logiclayer.gdf
			{
				mux4x1::(0,0):(2): mux4x1.gdf;
			}
			mux4x1::(0,0):(3): mux4x1.gdf;
			arithmeticlayer::(0,0):(8): arithmeticlayer.gdf
			{
				fulladder::(0,0):(12): fulladder.gdf;
				mux4x1::(0,0):(6): mux4x1.gdf;
				zero::(0,0):(3): zero.tdf;
			}
		}
		alulayer::(0,0):(64): alulayer.gdf
		{
			logiclayer::(0,0):(2): logiclayer.gdf
			{
				mux4x1::(0,0):(2): mux4x1.gdf;
			}
			mux4x1::(0,0):(3): mux4x1.gdf;
			arithmeticlayer::(0,0):(8): arithmeticlayer.gdf
			{
				fulladder::(0,0):(12): fulladder.gdf;
				mux4x1::(0,0):(6): mux4x1.gdf;
				zero::(0,0):(3): zero.tdf;
			}
		}
		alulayer::(0,0):(69): alulayer.gdf
		{
			logiclayer::(0,0):(2): logiclayer.gdf
			{
				mux4x1::(0,0):(2): mux4x1.gdf;
			}
			mux4x1::(0,0):(3): mux4x1.gdf;
			arithmeticlayer::(0,0):(8): arithmeticlayer.gdf
			{
				fulladder::(0,0):(12): fulladder.gdf;
				mux4x1::(0,0):(6): mux4x1.gdf;
				zero::(0,0):(3): zero.tdf;
			}
		}
		alulayer::(0,0):(73): alulayer.gdf
		{
			logiclayer::(0,0):(2): logiclayer.gdf
			{
				mux4x1::(0,0):(2): mux4x1.gdf;
			}
			mux4x1::(0,0):(3): mux4x1.gdf;
			arithmeticlayer::(0,0):(8): arithmeticlayer.gdf
			{
				fulladder::(0,0):(12): fulladder.gdf;
				mux4x1::(0,0):(6): mux4x1.gdf;
				zero::(0,0):(3): zero.tdf;
			}
		}
		alulayer::(0,0):(77): alulayer.gdf
		{
			logiclayer::(0,0):(2): logiclayer.gdf
			{
				mux4x1::(0,0):(2): mux4x1.gdf;
			}
			mux4x1::(0,0):(3): mux4x1.gdf;
			arithmeticlayer::(0,0):(8): arithmeticlayer.gdf
			{
				fulladder::(0,0):(12): fulladder.gdf;
				mux4x1::(0,0):(6): mux4x1.gdf;
				zero::(0,0):(3): zero.tdf;
			}
		}
		alulayer::(0,0):(80): alulayer.gdf
		{
			logiclayer::(0,0):(2): logiclayer.gdf
			{
				mux4x1::(0,0):(2): mux4x1.gdf;
			}
			mux4x1::(0,0):(3): mux4x1.gdf;
			arithmeticlayer::(0,0):(8): arithmeticlayer.gdf
			{
				fulladder::(0,0):(12): fulladder.gdf;
				mux4x1::(0,0):(6): mux4x1.gdf;
				zero::(0,0):(3): zero.tdf;
			}
		}
		alulayer::(0,0):(84): alulayer.gdf
		{
			logiclayer::(0,0):(2): logiclayer.gdf
			{
				mux4x1::(0,0):(2): mux4x1.gdf;
			}
			mux4x1::(0,0):(3): mux4x1.gdf;
			arithmeticlayer::(0,0):(8): arithmeticlayer.gdf
			{
				fulladder::(0,0):(12): fulladder.gdf;
				mux4x1::(0,0):(6): mux4x1.gdf;
				zero::(0,0):(3): zero.tdf;
			}
		}
		alulayer::(0,0):(88): alulayer.gdf
		{
			logiclayer::(0,0):(2): logiclayer.gdf
			{
				mux4x1::(0,0):(2): mux4x1.gdf;
			}
			mux4x1::(0,0):(3): mux4x1.gdf;
			arithmeticlayer::(0,0):(8): arithmeticlayer.gdf
			{
				fulladder::(0,0):(12): fulladder.gdf;
				mux4x1::(0,0):(6): mux4x1.gdf;
				zero::(0,0):(3): zero.tdf;
			}
		}
		alulayer::(0,0):(92): alulayer.gdf
		{
			logiclayer::(0,0):(2): logiclayer.gdf
			{
				mux4x1::(0,0):(2): mux4x1.gdf;
			}
			mux4x1::(0,0):(3): mux4x1.gdf;
			arithmeticlayer::(0,0):(8): arithmeticlayer.gdf
			{
				fulladder::(0,0):(12): fulladder.gdf;
				mux4x1::(0,0):(6): mux4x1.gdf;
				zero::(0,0):(3): zero.tdf;
			}
		}
		alulayer::(0,0):(96): alulayer.gdf
		{
			logiclayer::(0,0):(2): logiclayer.gdf
			{
				mux4x1::(0,0):(2): mux4x1.gdf;
			}
			mux4x1::(0,0):(3): mux4x1.gdf;
			arithmeticlayer::(0,0):(8): arithmeticlayer.gdf
			{
				fulladder::(0,0):(12): fulladder.gdf;
				mux4x1::(0,0):(6): mux4x1.gdf;
				zero::(0,0):(3): zero.tdf;
			}
		}
		alulayer::(0,0):(100): alulayer.gdf
		{
			logiclayer::(0,0):(2): logiclayer.gdf
			{
				mux4x1::(0,0):(2): mux4x1.gdf;
			}
			mux4x1::(0,0):(3): mux4x1.gdf;
			arithmeticlayer::(0,0):(8): arithmeticlayer.gdf
			{
				fulladder::(0,0):(12): fulladder.gdf;
				mux4x1::(0,0):(6): mux4x1.gdf;
				zero::(0,0):(3): zero.tdf;
			}
		}
		alulayer::(0,0):(104): alulayer.gdf
		{
			logiclayer::(0,0):(2): logiclayer.gdf
			{
				mux4x1::(0,0):(2): mux4x1.gdf;
			}
			mux4x1::(0,0):(3): mux4x1.gdf;
			arithmeticlayer::(0,0):(8): arithmeticlayer.gdf
			{
				fulladder::(0,0):(12): fulladder.gdf;
				mux4x1::(0,0):(6): mux4x1.gdf;
				zero::(0,0):(3): zero.tdf;
			}
		}
		alulayer::(0,0):(108): alulayer.gdf
		{
			logiclayer::(0,0):(2): logiclayer.gdf
			{
				mux4x1::(0,0):(2): mux4x1.gdf;
			}
			mux4x1::(0,0):(3): mux4x1.gdf;
			arithmeticlayer::(0,0):(8): arithmeticlayer.gdf
			{
				fulladder::(0,0):(12): fulladder.gdf;
				mux4x1::(0,0):(6): mux4x1.gdf;
				zero::(0,0):(3): zero.tdf;
			}
		}
		zero::(0,0):(113): zero.tdf;
		zero::(0,0):(114): zero.tdf;
	}
}
