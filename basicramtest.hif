HIF003
--
-- Copyright (C) 1988-2002 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	lpm_constant.tdf
	{
		lpm_constant [LPM_CVALUE,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			7 [LPM_CVALUE=0,LPM_WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0];
		}
	}
	altdpram.tdf
	{
		altdpram [DEVICE_FAMILY,USE_EAB=ON,OUTDATA_ACLR=ON,OUTDATA_REG=UNREGISTERED,RDCONTROL_ACLR=ON,RDCONTROL_REG=OUTCLOCK,RDADDRESS_ACLR=ON,RDADDRESS_REG=OUTCLOCK,WRCONTROL_ACLR=ON,WRCONTROL_REG=INCLOCK,WRADDRESS_ACLR=ON,WRADDRESS_REG=INCLOCK,INDATA_ACLR=ON,INDATA_REG=INCLOCK,LPM_FILE=NO_FILE,FILE=NO_FILE,NUMWORDS,WIDTHAD,WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [memmodes.inc,lpm_decode.inc,lpm_mux.inc,a_hdffe.inc,aglobal.inc]
		{
			3 [DEVICE_FAMILY=ACEX1K,USE_EAB=ON,OUTDATA_ACLR=ON,OUTDATA_REG=UNREGISTERED,RDCONTROL_ACLR=ON,RDCONTROL_REG=UNREGISTERED,RDADDRESS_ACLR=ON,RDADDRESS_REG=UNREGISTERED,WRCONTROL_ACLR=ON,WRCONTROL_REG=UNREGISTERED,WRADDRESS_ACLR=ON,WRADDRESS_REG=UNREGISTERED,INDATA_ACLR=ON,INDATA_REG=UNREGISTERED,LPM_FILE=NO_FILE,FILE=NO_FILE,NUMWORDS=16,WIDTHAD=4,WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q3,q2,q1,q0,wren,data3,data2,data1,data0,wraddress3,wraddress2,wraddress1,wraddress0,rdaddress3,rdaddress2,rdaddress1,rdaddress0];
		}
	}
	lpm_ram_dp.tdf
	{
		lpm_ram_dp [DEVICE_FAMILY,LPM_FILE=NO_FILE,LPM_OUTDATA=REGISTERED,LPM_WRADDRESS_CONTROL=REGISTERED,LPM_RDADDRESS_CONTROL=REGISTERED,LPM_INDATA=REGISTERED,LPM_NUMWORDS,LPM_WIDTHAD,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [altdpram.inc,lpm_mux.inc,lpm_decode.inc,aglobal.inc]
		{
			2 [DEVICE_FAMILY=ACEX1K,LPM_FILE=NO_FILE,LPM_OUTDATA=UNREGISTERED,LPM_WRADDRESS_CONTROL=UNREGISTERED,LPM_RDADDRESS_CONTROL=UNREGISTERED,LPM_INDATA=UNREGISTERED,LPM_WIDTHAD=4,LPM_WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q0,q1,q2,q3,wraddress0,wraddress1,wraddress2,wraddress3,rdaddress0,rdaddress1,rdaddress2,rdaddress3,data0,data1,data2,data3,wren];
		}
	}
	zero.tdf
	{
		zero [USE_LPM_FOR_AHDL_OPERATORS] [lpm_constant.inc]
		{
			6 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0];
		}
	}
	extractor4.v
	{
		extractor4 [] []
		{
			5 [] [];
		}
	}
	compressor4.v
	{
		compressor4 [] []
		{
			4 [] [];
		}
	}
	tiny_basic_ram.v
	{
		tiny_basic_ram [] [lpm_ram_dp.inc]
		{
			1 [] [];
		}
	}
	basicramtest.gdf
	{
		basicramtest [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	basicramtest::(0,0):(0): basicramtest.gdf
	{
		compressor4::(0,0):(19): compressor4.v;
		zero::(0,0):(14): zero.tdf
		{
			lpm_constant:7:(48,2):(28,lpm_constant_component): lpm_constant.tdf;
		}
		extractor4::(0,0):(9): extractor4.v;
		compressor4::(0,0):(5): compressor4.v;
		tiny_basic_ram::(0,0):(3): tiny_basic_ram.v
		{
			lpm_ram_dp:2:(53,0):(22,lpm_ram_dp_component): lpm_ram_dp.tdf
			{
				altdpram:3:(253,7):(49,sram): altdpram.tdf;
			}
		}
	}
}
