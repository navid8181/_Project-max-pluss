HIF003
--
-- Copyright (C) 1988-2002 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	mux8x1.gdf
	{
		mux8x1 [] []
		{
			30 [] [];
		}
	}
	extractor3.v
	{
		extractor3 [] []
		{
			32 [] [];
		}
	}
	compressor16.v
	{
		compressor16 [] []
		{
			31 [] [];
		}
	}
	alu.gdf
	{
		alu [] []
		{
			1 [] [];
		}
	}
	ar.gdf
	{
		ar [] []
		{
			9 [] [];
		}
	}
	goodram.tdf
	{
		goodram [USE_LPM_FOR_AHDL_OPERATORS] [lpm_ram_dp.inc]
		{
			15 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [data15,data14,data13,data12,data11,data10,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0,wraddress11,wraddress10,wraddress9,wraddress8,wraddress7,wraddress6,wraddress5,wraddress4,wraddress3,wraddress2,wraddress1,wraddress0,wren,rdaddress11,rdaddress10,rdaddress9,rdaddress8,rdaddress7,rdaddress6,rdaddress5,rdaddress4,rdaddress3,rdaddress2,rdaddress1,rdaddress0,rden,clock,q15,q14,q13,q12,q11,q10,q9,q8,q7,q6,q5,q4,q3,q2,q1,q0];
		}
	}
	pc.gdf
	{
		pc [] []
		{
			25 [] [];
		}
	}
	dr.gdf
	{
		dr [] []
		{
			26 [] [];
		}
	}
	ac.gdf
	{
		ac [] []
		{
			27 [] [];
		}
	}
	ir.gdf
	{
		ir [] []
		{
			28 [] [];
		}
	}
	tr.gdf
	{
		tr [] []
		{
			29 [] [];
		}
	}
	compressor12.v
	{
		compressor12 [] []
		{
			33 [] [];
		}
	}
	extractor16.v
	{
		extractor16 [] []
		{
			34 [] [];
		}
	}
	zero.tdf
	{
		zero [USE_LPM_FOR_AHDL_OPERATORS] [lpm_constant.inc]
		{
			7 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0];
		}
	}
	4bitregister.gdf
	{
		4bitregister [] []
		{
			10 [] [];
		}
	}
	ha.gdf
	{
		ha [] []
		{
			11 [] [];
		}
	}
	mux2x1.gdf
	{
		mux2x1 [] []
		{
			12 [] [];
		}
	}
	d.tdf
	{
		d [USE_LPM_FOR_AHDL_OPERATORS] [lpm_ff.inc]
		{
			13 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [sclr,data,clock,enable,q];
		}
	}
	alulayer.gdf
	{
		alulayer [] []
		{
			2 [] [];
		}
	}
	logiclayer.gdf
	{
		logiclayer [] []
		{
			3 [] [];
		}
	}
	mux4x1.gdf
	{
		mux4x1 [] []
		{
			4 [] [];
		}
	}
	arithmeticlayer.gdf
	{
		arithmeticlayer [] []
		{
			5 [] [];
		}
	}
	fulladder.gdf
	{
		fulladder [] []
		{
			6 [] [];
		}
	}
	lpm_constant.tdf
	{
		lpm_constant [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_CVALUE] []
		{
			8 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=1,LPM_CVALUE=0] [result0];
		}
	}
	lpm_ff.tdf
	{
		lpm_ff [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_AVALUE=0,LPM_SVALUE=0,LPM_FFTYPE=DFF,DEVICE_FAMILY] [aglobal.inc,lpm_constant.inc]
		{
			14 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=1,LPM_AVALUE=0,LPM_SVALUE=0,LPM_FFTYPE=DFF,DEVICE_FAMILY=ACEX1K] [sclr,enable,clock,data0,q0];
		}
	}
	lpm_ram_dp.tdf
	{
		lpm_ram_dp [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_WIDTHAD,LPM_NUMWORDS,LPM_INDATA=REGISTERED,LPM_RDADDRESS_CONTROL=REGISTERED,LPM_WRADDRESS_CONTROL=REGISTERED,LPM_OUTDATA=REGISTERED,LPM_FILE=NO_FILE,DEVICE_FAMILY] [aglobal.inc,lpm_decode.inc,lpm_mux.inc,altdpram.inc]
		{
			16 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=16,LPM_WIDTHAD=12,LPM_INDATA=REGISTERED,LPM_RDADDRESS_CONTROL=REGISTERED,LPM_WRADDRESS_CONTROL=REGISTERED,LPM_OUTDATA=UNREGISTERED,LPM_FILE=NO_FILE,DEVICE_FAMILY=ACEX1K] [rdclock,rdaddress0,rdaddress1,rdaddress2,rdaddress3,rdaddress4,rdaddress5,rdaddress6,rdaddress7,rdaddress8,rdaddress9,rdaddress10,rdaddress11,rden,wrclock,wraddress0,wraddress1,wraddress2,wraddress3,wraddress4,wraddress5,wraddress6,wraddress7,wraddress8,wraddress9,wraddress10,wraddress11,data0,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14,data15,wren,q0,q1,q2,q3,q4,q5,q6,q7,q8,q9,q10,q11,q12,q13,q14,q15];
		}
	}
	altdpram.tdf
	{
		altdpram [USE_LPM_FOR_AHDL_OPERATORS,WIDTH,WIDTHAD,NUMWORDS,FILE=NO_FILE,LPM_FILE=NO_FILE,INDATA_REG=INCLOCK,INDATA_ACLR=ON,WRADDRESS_REG=INCLOCK,WRADDRESS_ACLR=ON,WRCONTROL_REG=INCLOCK,WRCONTROL_ACLR=ON,RDADDRESS_REG=OUTCLOCK,RDADDRESS_ACLR=ON,RDCONTROL_REG=OUTCLOCK,RDCONTROL_ACLR=ON,OUTDATA_REG=UNREGISTERED,OUTDATA_ACLR=ON,USE_EAB=ON,DEVICE_FAMILY] [aglobal.inc,a_hdffe.inc,lpm_mux.inc,lpm_decode.inc,memmodes.inc]
		{
			17 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=16,WIDTHAD=12,NUMWORDS=4096,FILE=NO_FILE,LPM_FILE=NO_FILE,INDATA_REG=INCLOCK,INDATA_ACLR=ON,WRADDRESS_REG=INCLOCK,WRADDRESS_ACLR=ON,WRCONTROL_REG=INCLOCK,WRCONTROL_ACLR=ON,RDADDRESS_REG=OUTCLOCK,RDADDRESS_ACLR=ON,RDCONTROL_REG=OUTCLOCK,RDCONTROL_ACLR=ON,OUTDATA_REG=UNREGISTERED,OUTDATA_ACLR=ON,USE_EAB=ON,DEVICE_FAMILY=ACEX1K] [outclock,rdaddress0,rdaddress1,rdaddress2,rdaddress3,rdaddress4,rdaddress5,rdaddress6,rdaddress7,rdaddress8,rdaddress9,rdaddress10,rdaddress11,rden,inclock,wraddress0,wraddress1,wraddress2,wraddress3,wraddress4,wraddress5,wraddress6,wraddress7,wraddress8,wraddress9,wraddress10,wraddress11,data0,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14,data15,wren,q0,q1,q2,q3,q4,q5,q6,q7,q8,q9,q10,q11,q12,q13,q14,q15];
		}
	}
	lpm_decode.tdf
	{
		lpm_decode [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_DECODES,LPM_PIPELINE=0,CASCADE_CHAIN=MANUAL,DEVICE_FAMILY] [aglobal.inc,lpm_constant.inc,lpm_compare.inc,altshift.inc,declut.inc]
		{
			18 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=1,LPM_DECODES=2,LPM_PIPELINE=0,CASCADE_CHAIN=IGNORE,DEVICE_FAMILY=ACEX1K] [enable,data0,eq0,eq1];
		}
	}
	altshift.tdf
	{
		altshift [USE_LPM_FOR_AHDL_OPERATORS,WIDTH=4,DEPTH=0] []
		{
			19 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=2,DEPTH=0] [data0,data1,result0,result1];
			21 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=16,DEPTH=0] [data0,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14,data15,result0,result1,result2,result3,result4,result5,result6,result7,result8,result9,result10,result11,result12,result13,result14,result15];
		}
	}
	lpm_mux.tdf
	{
		lpm_mux [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_SIZE,LPM_WIDTHS,LPM_PIPELINE=0] [altshift.inc,bypassff.inc,muxlut.inc]
		{
			20 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=16,LPM_SIZE=2,LPM_WIDTHS=1,LPM_PIPELINE=0] [sel0,data0_0,data0_1,data0_2,data0_3,data0_4,data0_5,data0_6,data0_7,data0_8,data0_9,data0_10,data0_11,data0_12,data0_13,data0_14,data0_15,data1_0,data1_1,data1_2,data1_3,data1_4,data1_5,data1_6,data1_7,data1_8,data1_9,data1_10,data1_11,data1_12,data1_13,data1_14,data1_15,result0,result1,result2,result3,result4,result5,result6,result7,result8,result9,result10,result11,result12,result13,result14,result15];
		}
	}
	muxlut.tdf
	{
		muxlut [USE_LPM_FOR_AHDL_OPERATORS,SIZE,LEVEL,TOT_LEVELS,LATENCY,REM_LATENCY,LOCAL=0,CASCADE_CHAIN] [altshift.inc,muxlut.inc]
		{
			22 [USE_LPM_FOR_AHDL_OPERATORS=OFF,SIZE=2,LEVEL=0,TOT_LEVELS=1,LATENCY=0,LOCAL=0,CASCADE_CHAIN=IGNORE] [select0,data0,data1,result];
		}
	}
	a_hdffe.tdf
	{
		a_hdffe [USE_LPM_FOR_AHDL_OPERATORS,NOT_GATE_PUSH_BACK=OFF,DEVICE_FAMILY] [a_hdffe.inc,aglobal.inc]
		{
			23 [USE_LPM_FOR_AHDL_OPERATORS=OFF,NOT_GATE_PUSH_BACK=ON,DEVICE_FAMILY=ACEX1K] [ena,clk,d,q];
			24 [USE_LPM_FOR_AHDL_OPERATORS=OFF,NOT_GATE_PUSH_BACK=OFF,DEVICE_FAMILY=ACEX1K] [ena,clk,d,q];
		}
	}
	moris_computer.gdf
	{
		moris_computer [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	moris_computer::(0,0):(0): moris_computer.gdf;
}
