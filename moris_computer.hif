HIF003
--
-- Copyright (C) 1988-2002 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
}
TREE
{
	moris_computer::(0,0):(0): moris_computer.gdf
	{
		zero::(0,0):(109): zero.tdf;
		extractor16::(0,0):(108): extractor16.v;
		extractor16::(0,0):(107): extractor16.v;
		extractor16::(0,0):(106): extractor16.v;
		extractor16::(0,0):(103): extractor16.v;
		extractor12::(0,0):(101): extractor12.v;
		extractor12::(0,0):(100): extractor12.v;
		extractor16::(0,0):(98): extractor16.v;
		compressor12::(0,0):(96): compressor12.v;
		extractor3::(0,0):(95): extractor3.v;
		mux8x1::(0,0):(94): mux8x1.gdf;
		extractor3::(0,0):(93): extractor3.v;
		mux8x1::(0,0):(92): mux8x1.gdf;
		extractor3::(0,0):(91): extractor3.v;
		mux8x1::(0,0):(90): mux8x1.gdf;
		extractor3::(0,0):(89): extractor3.v;
		mux8x1::(0,0):(88): mux8x1.gdf;
		extractor3::(0,0):(87): extractor3.v;
		mux8x1::(0,0):(86): mux8x1.gdf;
		extractor3::(0,0):(85): extractor3.v;
		mux8x1::(0,0):(84): mux8x1.gdf;
		extractor3::(0,0):(83): extractor3.v;
		mux8x1::(0,0):(82): mux8x1.gdf;
		extractor3::(0,0):(81): extractor3.v;
		mux8x1::(0,0):(80): mux8x1.gdf;
		extractor3::(0,0):(47): extractor3.v;
		extractor3::(0,0):(45): extractor3.v;
		mux8x1::(0,0):(38): mux8x1.gdf;
		extractor3::(0,0):(37): extractor3.v;
		mux8x1::(0,0):(36): mux8x1.gdf;
		extractor3::(0,0):(35): extractor3.v;
		mux8x1::(0,0):(34): mux8x1.gdf;
		extractor3::(0,0):(25): extractor3.v;
		mux8x1::(0,0):(24): mux8x1.gdf;
		extractor3::(0,0):(23): extractor3.v;
		compressor16::(0,0):(22): compressor16.v;
		mux8x1::(0,0):(21): mux8x1.gdf;
		tr::(0,0):(12): tr.gdf;
		ir::(0,0):(10): ir.gdf;
		ac::(0,0):(9): ac.gdf;
		dr::(0,0):(5): dr.gdf;
		pc::(0,0):(4): pc.gdf;
		goodram::(0,0):(3): goodram.tdf;
		ar::(0,0):(2): ar.gdf;
		alu::(0,0):(1): alu.gdf;
		compressor16::(0,0):(27): compressor16.v;
		extractor3::(0,0):(34): extractor3.v;
		mux8x1::(0,0):(35): mux8x1.gdf;
		extractor3::(0,0):(39): extractor3.v;
		mux8x1::(0,0):(40): mux8x1.gdf;
		extractor3::(0,0):(41): extractor3.v;
		mux8x1::(0,0):(42): mux8x1.gdf;
		extractor3::(0,0):(43): extractor3.v;
		mux8x1::(0,0):(44): mux8x1.gdf;
	}
}
