HIF003
--
-- Copyright (C) 1988-2002 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	lpm_constant.tdf
	{
		lpm_constant [LPM_CVALUE,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			8 [LPM_CVALUE=0,LPM_WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0];
		}
	}
	compressor16.v
	{
		compressor16 [] []
		{
			6 [] [];
		}
	}
	zero.tdf
	{
		zero [USE_LPM_FOR_AHDL_OPERATORS] [lpm_constant.inc]
		{
			7 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0];
		}
	}
	4bitregister.gdf
	{
		4bitregister [] []
		{
			1 [] [];
		}
	}
	ha.gdf
	{
		ha [] []
		{
			2 [] [];
		}
	}
	mux2x1.gdf
	{
		mux2x1 [] []
		{
			3 [] [];
		}
	}
	d.tdf
	{
		d [USE_LPM_FOR_AHDL_OPERATORS] [lpm_ff.inc]
		{
			4 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [sclr,data,clock,enable,q];
		}
	}
	lpm_ff.tdf
	{
		lpm_ff [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_AVALUE=0,LPM_SVALUE=0,LPM_FFTYPE=DFF,DEVICE_FAMILY] [aglobal.inc,lpm_constant.inc]
		{
			5 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=1,LPM_AVALUE=0,LPM_SVALUE=0,LPM_FFTYPE=DFF,DEVICE_FAMILY=MAX7000] [sclr,enable,clock,data0,q0];
		}
	}
	learn.gdf
	{
		learn [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	learn::(0,0):(0): learn.gdf
	{
		compressor16:6:(0,0):(1): compressor16.v;
		zero:7:(0,0):(4): zero.tdf
		{
			lpm_constant:8:(48,2):(28,lpm_constant_component): lpm_constant.tdf;
		}
	}
}
