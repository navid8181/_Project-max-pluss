HIF003
--
-- Copyright (C) 1988-2002 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	lpm_decode.tdf
	{
		lpm_decode [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_DECODES,LPM_PIPELINE=0,CASCADE_CHAIN=MANUAL,DEVICE_FAMILY] [aglobal.inc,lpm_constant.inc,lpm_compare.inc,altshift.inc,declut.inc]
		{
			9 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=4,LPM_DECODES=16,LPM_PIPELINE=0,CASCADE_CHAIN=IGNORE,DEVICE_FAMILY=ACEX1K] [data0,data1,data2,data3,eq0,eq1,eq2,eq3,eq4,eq5,eq6,eq7,eq8,eq9,eq10,eq11,eq12,eq13,eq14,eq15];
		}
	}
	counter4.tdf
	{
		counter4 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_counter.inc]
		{
			1 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [sclr,clock,q3,q2,q1,q0];
		}
	}
	dec4x16.tdf
	{
		dec4x16 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_decode.inc]
		{
			8 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [data3,data2,data1,data0,eq0,eq1,eq2,eq3,eq4,eq5,eq6,eq7,eq8,eq9,eq10,eq11,eq12,eq13,eq14,eq15];
		}
	}
	zero.tdf
	{
		zero [USE_LPM_FOR_AHDL_OPERATORS] [lpm_constant.inc]
		{
			12 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0];
		}
	}
	lpm_counter.tdf
	{
		lpm_counter [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_DIRECTION=DEFAULT,LPM_MODULUS=0,LPM_AVALUE=0,LPM_SVALUE=0,DEVICE_FAMILY,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,NOT_GATE_PUSH_BACK=OFF,CARRY_CNT_EN=SMART,LABWIDE_SCLR=ON] [aglobal.inc,dffeea.inc,lpm_counter.inc,lpm_compare.inc,cmpconst.inc,lpm_add_sub.inc,lpm_decode.inc,lpm_constant.inc]
		{
			2 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=4,LPM_DIRECTION=UP,LPM_MODULUS=0,LPM_AVALUE=0,LPM_SVALUE=0,DEVICE_FAMILY=ACEX1K,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,NOT_GATE_PUSH_BACK=ON,CARRY_CNT_EN=SMART,LABWIDE_SCLR=ON] [sclr,clock,q0,q1,q2,q3];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY,STYLE] [aglobal.inc,altshift.inc,bypassff.inc,look_add.inc,addcore.inc,lpm_add_sub.inc]
		{
			3 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=4,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=ADD,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K,STYLE=NORMAL] [datab0,datab1,datab2,datab3,dataa0,dataa1,dataa2,dataa3,cout,result0,result1,result2,result3];
		}
	}
	addcore.tdf
	{
		addcore [USE_LPM_FOR_AHDL_OPERATORS,width,CONSTANT_CIN,CARRY_CHAIN,CARRY_CHAIN_LENGTH,DEVICE_FAMILY] [aglobal.inc,addcore.inc]
		{
			4 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=4,CONSTANT_CIN=1,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K] [cin,datab0,datab1,datab2,datab3,dataa0,dataa1,dataa2,dataa3,cout,result0,result1,result2,result3];
		}
	}
	altshift.tdf
	{
		altshift [USE_LPM_FOR_AHDL_OPERATORS,WIDTH=4,DEPTH=0] []
		{
			5 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=4,DEPTH=0] [data0,data1,data2,data3,result0,result1,result2,result3];
			6 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=1,DEPTH=0] [data0,result0];
			10 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=16,DEPTH=0] [data0,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14,data15,result0,result1,result2,result3,result4,result5,result6,result7,result8,result9,result10,result11,result12,result13,result14,result15];
		}
	}
	lpm_constant.tdf
	{
		lpm_constant [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_CVALUE] []
		{
			7 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=4,LPM_CVALUE=0] [];
			13 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=1,LPM_CVALUE=0] [result0];
		}
	}
	declut.tdf
	{
		declut [USE_LPM_FOR_AHDL_OPERATORS,width,STAGE,TOT_LEVELS,LATENCY] [bypassff.inc,declut.inc]
		{
			11 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=3,STAGE=0,TOT_LEVELS=1,LATENCY=0] [enable,data0,data1,data2,eq0,eq1,eq2,eq3,eq4,eq5,eq6,eq7];
		}
	}
	controlunit.gdf
	{
		controlunit [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	controlunit::(0,0):(0): controlunit.gdf
	{
		counter4::(0,0):(7): counter4.tdf
		{
			lpm_counter:2:(50,2):(33,lpm_counter_component): lpm_counter.tdf
			{
				lpm_constant:7:(318,6):(88,scdw): lpm_constant.tdf;
				lpm_add_sub:3:(298,7):(65,add_sub): lpm_add_sub.tdf
				{
					altshift:6:(226,2):(87,oflow_ext_latency_ffs): altshift.tdf;
					altshift:6:(224,2):(79,carry_ext_latency_ffs): altshift.tdf;
					altshift:5:(222,2):(65,result_ext_latency_ffs): altshift.tdf;
					addcore:4:(212,4):(46,adder): addcore.tdf;
				}
			}
		}
		dec4x16::(0,0):(9): dec4x16.tdf
		{
			lpm_decode:9:(64,2):(47,lpm_decode_component): lpm_decode.tdf
			{
				declut:11:(101,5):(112,decoder1): declut.tdf;
				declut:11:(98,5):(89,decoder0): declut.tdf;
				altshift:10:(76,2):(51,external_latency_ffs): altshift.tdf;
			}
		}
		zero::(0,0):(27): zero.tdf
		{
			lpm_constant:13:(48,2):(28,lpm_constant_component): lpm_constant.tdf;
		}
	}
}
